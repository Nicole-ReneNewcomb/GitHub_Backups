Microsoft (R) Macro Assembler Version 14.33.31630.0	    12/06/22 01:16:24
NRN_Assignment7_3.asm					     Page 1 - 1


				; Nicole-Rene Newcomb's code for Assignment 7, problem 3

				; Program Description: Draw House
				; Author: Nicole-Rene Newcomb
				; Creation Date: 12/05/2022

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 


 00000000			.data
 00000000 DA C4 C4 C4 C4	topOfHouse BYTE 218, 196, 196, 196, 196, 196, 196, 196, 196, 191     
	   C4 C4 C4 C4 BF
 0000000A 0000000A		topHouseSize DWORD ($ - topOfHouse)
 0000000E B3 20 20 20 20	middleOfHouse BYTE 179, 32, 32, 32, 32, 32, 32, 32, 32, 179      
	   20 20 20 20 B3
 00000018 0000000A		middleHouseSize DWORD ($ - middleOfHouse)      
 0000001C B3 C9 CD BB 20	doorTop BYTE 179, 201, 205, 187, 32, 32, 201, 205, 187, 179      
	   20 C9 CD BB B3
 00000026 0000000A		doorTopSize DWORD ($ - doorTop)     
 0000002A B3 BA 20 BA 20	doorMiddle BYTE 179, 186, 32, 186, 32, 32, 186, 32, 186, 179      
	   20 BA 20 BA B3
 00000034 0000000A		doorMiddleSize DWORD ($ - doorMiddle)   
 00000038 B3 BA 20 BA 20	windowBottom BYTE 179, 186, 32, 186, 32, 32, 200, 205, 188, 179      
	   20 C8 CD BC B3
 00000042 0000000A		windowBottomSize DWORD ($ - windowBottom)   
 00000046 B3 C8 CD BC 20	doorBottom BYTE 179, 200, 205, 188, 32, 32, 32, 32, 32, 179      
	   20 20 20 20 B3
 00000050 0000000A		doorBottomSize DWORD ($ - doorBottom) 
 00000054 C0 C4 C4 C4 C4	bottomOfHouse BYTE 192, 196, 196, 196, 196, 196, 196, 196, 196, 217 
	   C4 C4 C4 C4 D9
 0000005E 0000000A		bottomHouseSize DWORD ($ - bottomOfHouse)
 00000062 20 20 20 20 2F	topOfTriangle BYTE 32, 32, 32, 32, 47, 92, 32, 32, 32, 32
	   5C 20 20 20 20
 0000006C 0000000A		topSize DWORD ($ - topOfTriangle)
 00000070 20 20 20 2F DA	rowTwo BYTE 32, 32, 32, 47, 218, 191, 92, 32, 32, 32      
	   BF 5C 20 20 20
 0000007A 0000000A		rowTwoSize DWORD ($ - rowTwo)
 0000007E 20 20 2F 20 B3	rowThree BYTE 32, 32, 47, 32, 179, 179, 32, 92, 32, 32 
	   B3 20 5C 20 20
 00000088 0000000A		rowThreeSize DWORD ($ - rowThree)
 0000008C 20 2F 20 20 C0	rowFour BYTE 32, 47, 32, 32, 192, 217, 32, 32, 92, 32  
	   D9 20 20 5C 20
 00000096 0000000A		rowFourSize DWORD ($ - rowFour)
 0000009A 2F 5F 5F 5F 5F	bottomOfTriangle BYTE 47, 95, 95, 95, 95, 95, 95, 95, 95, 92
	   5F 5F 5F 5F 5C
 000000A4 0000000A		bottomSize DWORD ($ - bottomofTriangle)
 000000A8 00000000		consoleHandle DWORD 0                                 ; handle to standard output device
 000000AC 00000000		cellsWritten DWORD 0
 000000B0 0014 000A		windowStart COORD <20,10> 

 00000000			.code
 00000000			main PROC

				INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000000  6A F5	   *	    push    -00000000Bh
 00000002  E8 00000000 E   *	    call   GetStdHandle
 00000007  A3 000000A8 R		mov consoleHandle, eax

				; triangle roof
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR topOfTriangle,       ; draw top of triangle
						topSize,
						windowStart,
						ADDR cellsWritten
 0000000C  68 000000AC R   *	    push   OFFSET cellsWritten
 00000011  FF 35 000000B0 R *	    push   dword  ptr windowStart
 00000017  FF 35 0000006C R *	    push   topSize
 0000001D  68 00000062 R   *	    push   OFFSET topOfTriangle
 00000022  FF 35 000000A8 R *	    push   consoleHandle
 00000028  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 0000002D  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR rowTwo,   ; draw 2nd row of triangle
						rowTwoSize,
						windowStart,
						ADDR cellsWritten
 00000034  68 000000AC R   *	    push   OFFSET cellsWritten
 00000039  FF 35 000000B0 R *	    push   dword  ptr windowStart
 0000003F  FF 35 0000007A R *	    push   rowTwoSize
 00000045  68 00000070 R   *	    push   OFFSET rowTwo
 0000004A  FF 35 000000A8 R *	    push   consoleHandle
 00000050  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 00000055  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR rowThree,   ; draw 3rd row of triangle
						rowThreeSize,
						windowStart,
						ADDR cellsWritten
 0000005C  68 000000AC R   *	    push   OFFSET cellsWritten
 00000061  FF 35 000000B0 R *	    push   dword  ptr windowStart
 00000067  FF 35 00000088 R *	    push   rowThreeSize
 0000006D  68 0000007E R   *	    push   OFFSET rowThree
 00000072  FF 35 000000A8 R *	    push   consoleHandle
 00000078  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 0000007D  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR rowFour,   ; draw 4th row of triangle
						rowFourSize,
						windowStart,
						ADDR cellsWritten
 00000084  68 000000AC R   *	    push   OFFSET cellsWritten
 00000089  FF 35 000000B0 R *	    push   dword  ptr windowStart
 0000008F  FF 35 00000096 R *	    push   rowFourSize
 00000095  68 0000008C R   *	    push   OFFSET rowFour
 0000009A  FF 35 000000A8 R *	    push   consoleHandle
 000000A0  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 000000A5  66| FF 05			inc windowStart.Y
	   000000B2 R
						

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR bottomOfTriangle,   ; draw bottom of triangle
						bottomSize,
						windowStart,
						ADDR cellsWritten
 000000AC  68 000000AC R   *	    push   OFFSET cellsWritten
 000000B1  FF 35 000000B0 R *	    push   dword  ptr windowStart
 000000B7  FF 35 000000A4 R *	    push   bottomSize
 000000BD  68 0000009A R   *	    push   OFFSET bottomOfTriangle
 000000C2  FF 35 000000A8 R *	    push   consoleHandle
 000000C8  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 000000CD  66| FF 05			inc windowStart.Y
	   000000B2 R

				; square house
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR topOfHouse,       ; draw top of house
						topHouseSize,
						windowStart,
						ADDR cellsWritten
 000000D4  68 000000AC R   *	    push   OFFSET cellsWritten
 000000D9  FF 35 000000B0 R *	    push   dword  ptr windowStart
 000000DF  FF 35 0000000A R *	    push   topHouseSize
 000000E5  68 00000000 R   *	    push   OFFSET topOfHouse
 000000EA  FF 35 000000A8 R *	    push   consoleHandle
 000000F0  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 000000F5  66| FF 05			inc windowStart.Y
	   000000B2 R
					
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR middleOfHouse,   ; draw non window/door portion of house
						middleHouseSize,
						windowStart,
						ADDR cellsWritten
 000000FC  68 000000AC R   *	    push   OFFSET cellsWritten
 00000101  FF 35 000000B0 R *	    push   dword  ptr windowStart
 00000107  FF 35 00000018 R *	    push   middleHouseSize
 0000010D  68 0000000E R   *	    push   OFFSET middleOfHouse
 00000112  FF 35 000000A8 R *	    push   consoleHandle
 00000118  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 0000011D  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR doorTop,   ; draw top of window/door portion of house
						doorTopSize,
						windowStart,
						ADDR cellsWritten
 00000124  68 000000AC R   *	    push   OFFSET cellsWritten
 00000129  FF 35 000000B0 R *	    push   dword  ptr windowStart
 0000012F  FF 35 00000026 R *	    push   doorTopSize
 00000135  68 0000001C R   *	    push   OFFSET doorTop
 0000013A  FF 35 000000A8 R *	    push   consoleHandle
 00000140  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 00000145  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR doorMiddle,   ; draw middle of window/door portion of house
						doorMiddleSize,
						windowStart,
						ADDR cellsWritten
 0000014C  68 000000AC R   *	    push   OFFSET cellsWritten
 00000151  FF 35 000000B0 R *	    push   dword  ptr windowStart
 00000157  FF 35 00000034 R *	    push   doorMiddleSize
 0000015D  68 0000002A R   *	    push   OFFSET doorMiddle
 00000162  FF 35 000000A8 R *	    push   consoleHandle
 00000168  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 0000016D  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR windowBottom,   ; draw bottom of window portion of house
						windowBottomSize,
						windowStart,
						ADDR cellsWritten
 00000174  68 000000AC R   *	    push   OFFSET cellsWritten
 00000179  FF 35 000000B0 R *	    push   dword  ptr windowStart
 0000017F  FF 35 00000042 R *	    push   windowBottomSize
 00000185  68 00000038 R   *	    push   OFFSET windowBottom
 0000018A  FF 35 000000A8 R *	    push   consoleHandle
 00000190  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 00000195  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR doorBottom,   ; draw bottom of door portion of house
						doorBottomSize,
						windowStart,
						ADDR cellsWritten
 0000019C  68 000000AC R   *	    push   OFFSET cellsWritten
 000001A1  FF 35 000000B0 R *	    push   dword  ptr windowStart
 000001A7  FF 35 00000050 R *	    push   doorBottomSize
 000001AD  68 00000046 R   *	    push   OFFSET doorBottom
 000001B2  FF 35 000000A8 R *	    push   consoleHandle
 000001B8  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 000001BD  66| FF 05			inc windowStart.Y
	   000000B2 R
						
					INVOKE WriteConsoleOutputCharacter,
						consoleHandle,
						ADDR bottomOfHouse,   ; draw bottom of house
						bottomHouseSize,
						windowStart,
						ADDR cellsWritten
 000001C4  68 000000AC R   *	    push   OFFSET cellsWritten
 000001C9  FF 35 000000B0 R *	    push   dword  ptr windowStart
 000001CF  FF 35 0000005E R *	    push   bottomHouseSize
 000001D5  68 00000054 R   *	    push   OFFSET bottomOfHouse
 000001DA  FF 35 000000A8 R *	    push   consoleHandle
 000001E0  E8 00000000 E   *	    call   WriteConsoleOutputCharacterA
 000001E5  66| FF 05			inc windowStart.Y
	   000000B2 R

					INVOKE ExitProcess, 0
 000001EC  6A 00	   *	    push   +000000000h
 000001EE  E8 00000000 E   *	    call   ExitProcess
 000001F3			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.33.31630.0	    12/06/22 01:16:24
NRN_Assignment7_3.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000B4 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001F3 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001F3 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bottomHouseSize  . . . . . . . .	DWord	 0000005E _DATA	
bottomOfHouse  . . . . . . . . .	Byte	 00000054 _DATA	
bottomOfTriangle . . . . . . . .	Byte	 0000009A _DATA	
bottomSize . . . . . . . . . . .	DWord	 000000A4 _DATA	
brown  . . . . . . . . . . . . .	Number	 00000006h   
cellsWritten . . . . . . . . . .	DWord	 000000AC _DATA	
consoleHandle  . . . . . . . . .	DWord	 000000A8 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
doorBottomSize . . . . . . . . .	DWord	 00000050 _DATA	
doorBottom . . . . . . . . . . .	Byte	 00000046 _DATA	
doorMiddleSize . . . . . . . . .	DWord	 00000034 _DATA	
doorMiddle . . . . . . . . . . .	Byte	 0000002A _DATA	
doorTopSize  . . . . . . . . . .	DWord	 00000026 _DATA	
doorTop  . . . . . . . . . . . .	Byte	 0000001C _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
middleHouseSize  . . . . . . . .	DWord	 00000018 _DATA	
middleOfHouse  . . . . . . . . .	Byte	 0000000E _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rowFourSize  . . . . . . . . . .	DWord	 00000096 _DATA	
rowFour  . . . . . . . . . . . .	Byte	 0000008C _DATA	
rowThreeSize . . . . . . . . . .	DWord	 00000088 _DATA	
rowThree . . . . . . . . . . . .	Byte	 0000007E _DATA	
rowTwoSize . . . . . . . . . . .	DWord	 0000007A _DATA	
rowTwo . . . . . . . . . . . . .	Byte	 00000070 _DATA	
topHouseSize . . . . . . . . . .	DWord	 0000000A _DATA	
topOfHouse . . . . . . . . . . .	Byte	 00000000 _DATA	
topOfTriangle  . . . . . . . . .	Byte	 00000062 _DATA	
topSize  . . . . . . . . . . . .	DWord	 0000006C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
windowBottomSize . . . . . . . .	DWord	 00000042 _DATA	
windowBottom . . . . . . . . . .	Byte	 00000038 _DATA	
windowStart  . . . . . . . . . .	COORD	 000000B0 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
